(defun regress-pair (x)
  (values (build-avl-tree #'fixnum-compare nil (remove-duplicates (first x)))
          (build-avl-tree #'fixnum-compare nil (remove-duplicates (second x)))))

(let ((regress-1
       '((503 318 77 909 13 852 372 378 859 116 598 753 858 252 394 567 678 971
          872 767 137 392 402 57 979 766 1012 795 622 139 931 502 995 378 925 159
          428 391 913 875 315 433 35 881 908 391 370 450 706 312 349 306 887 317
          349 81 962 1003 484 889 255 636 613 107 811 207 486 417 298 643 301 856
          578 39 950 137 138 432 731 852 256 98 655 207 194 458 686 515 13 549 71
          224 948 826 556 36 624 738 319 49 320 709 199 872 589 291 716 143 933
          437 132 274 648 407 783 239 734 45 1012 611 765 1015 50 408 495 660 378
          746 508 926 659 37 336 112 890 620 717 419 596 575 738 177 108 651 846
          635 918 667 13 277 412 618 494 790 329 944 352 380 366 823 381 882 343
          647 585 789 313 607 409 502 360 498 343 174 269 271 406 458 477 283 640
          391 286 619 430 854 339 813 72 247 852 753 951 124 154 766 616 958 760
          171 646 6 571 694 722 659 729 824 403 430 974 732 992 885 876 783 82
          242 518 31 515 909 169 557 136 837 269 922 240 405 738 229 713 149 161
          291 223 358 522 342 634 584 1009 455 494 436 969 669 900 418 431 423
          639 191 400 116 627 233 682 71 558 333 1022 525 606 909 961 230 625 544
          325 854 978 796 836 722 441 419 117 367 968 832 484 701 869 20 202 636
          934 1001 938 496 603 281 294 697 580 120 746 157 280 994 673 23 326 541
          374 957 455 1009 26 721 821 657 114 475 135 827 607 896 212 242 791 505
          391 327 577 924 249 909 872 177 293 798 684 458 480 647 591 187 146 490
          325 641 412 1008 933 501 721 642 514 3 625 428 598 953 144 923 11 631
          234 83 360 834 777 217 690 433 9 914 591 476 859 869 883 16 287 554 940
          748 310 941 1008 934 97 82 111 929 600 646 370 804 849 957 705 263 277
          973 594 174 925 474 211 235 803 941 574 872 102 92 896 807 458 540 649
          720 564 998 937 142 882 997 54 68 240 87 723 429 557 282 282 310 867
          591 161 467 723 221 570 848 205 370 786 165 1010 276 158 748 866 42 4
          49 680 675 352 528 520 521 92 234 552 467 295 602 534 627 753 638 406
          52 459 416 496 443 155 96 767 412 146 379 432 500 203 909 204 714 1008
          856 157 14 492 249 816 316 359 56 648 873 92 99 334 705 800 562 72 716
          271 867 103 767 796 397 757 1012 659 498 984 754 993 381 544 892 894
          534 385 1017 868 1022 657 27 474 378 230 169 943 606 566 434 540 660
          888 879 387 289 986 795 204 391 582 753 902 541 551 948 237 237 186 530
          10 670 405 815 344 916 784 304 891 782 979 40 820 85 776 826 787 226
          654 806 436 106 127 90 505 971 593 322 378 987 315 480 423 372 653 586
          63 194 989 379 85 949 484 309 474 1021 572 576 266 143 364 1009 940 630
          119 729 41 508 862 733 413 131 350 346 189 240 174 628 128 611 748 57
          443 774 1002 418 618 0 85 391 388 122 328 922 314 871 690 39 668 45 823
          392 39 477 455 156 862 134 205 768 84 563 98 557 181 252 451 416 490
          733 4 191 815 298 301 559 702 919 631 772 196 637 897 811 132 411 537
          966 181 263 81 647 741 7 350 1012 610 582 610 515 821 213 14 93 436 406
          912 404 500 641 635 176 196 250 1007 370 9 550 571 670 300 332 620 779
          874 447 173 720 94 883 14 784 426 845 257 275 170 101 1005 16 713 317
          567 989 471 607 736 53 902 226 200 178 584 974 576 459 520 880 815 889
          1004 548 984 304 18 369 74 60 663 214 732 315 938 72 184 399 553 971
          777 902 120 356 963 909 156 795 1013 99 277 378 540 589 879 192 116 15
          789 666 203 696 655 167 320 392 481 837 146 253 273 743 585 263 413 741
          314 987 918 967 709 572 213 344 562 512 17 74 652 395 184 346 667 804
          924 912 331 230 59 815 1014 610 657 532 483 116 911 297 203 155 1014
          1016 214 461 933 886 641 360 200 897 41 916 618 636 352 312 434 15 465
          257 687 189 243 127 89 524 147 388 869 562 203 553 590 232 1014 490 923
          728 885 1010 468 808 858 823 504 857 390 282 162 454 77 115 241 83 675
          578 276 767 0 746 324 577 414 262 535 808 397 350 986 566 100 3 611 518
          262 62 595 806 724 1021 768 778 968 786 633 212 58 218 1003 958 322 478
          808 71 1008 551 240 220 15 443 367 795 650 768 454 77 906 403 124 198
          282 170 201 945 47 300 0 901 541 870 523 273 132 310 872 899 96 60 176
          812 373 950 135 442 209 142 158 631 401 596 920 900 580 406 838 780 570
          436 831 106 328 305 972 606 907 410 1023 975 237 60 552 1003 697 630
          660 304 240 695 909 627 896 849 119 49 183 859 829 87 855 456 469 791
          733 242 221 284 883 522 645 475 755 37 560 89 742 772 260 973 777 762
          38 610 50 817 304 894 1011 384 214 609 44 173 360 998 648 969 398 766
          203 913 761 592 879 858 708 801 392 409 654 571 18 326 439 68 205 16
          635 573 957 596 860 659 990 529 1016 296 154 105 399 726 455 721 90 64
          788 57 28 972 545 366 699 346 690 629 487 200 641 944 267 331 581 257
          341 1000 971 444 198 1002 842 315 231 220 706 776 277 896 936 833 710 9
          488 63 57 406 866 988 691 68 442 913 81 465 226 896 951 573 409 711 73
          405 135 196 325 206 615 708 112 314 815 29 283 622 850 944 350 1009 287
          212 419 1018 131 339 617 135 834 26 121 272 686 947 512 7 287 413 509
          562 985 329 333 858 182 538 415 315 649 129 683 772 432 0 866 991 433
          585 608 446 1010 181 775 201 959 354 199 772 913 242 203 711 811 213
          410 1023 375 928 596 140 199 968 93 371 416 440 117 580 937 378 917 639
          405 641 208 624 16 716 76 351 734 379 648 782 607 295 408 79 182 106
          909 328 810 801 153 433 922 249 271 446 333 546 274 624 574 722 827 926
          830 229 575 3 90 371 161 847 650 389 996 150 595 625 73 505 556 318 957
          725 344 178 52 94 397 987 932 497 596 738 197 552 662 566 431 86 750
          166 158 15 502 955 394 276 615 686 262 447 302 76 688 409 506 1006 982
          747 403 533 922 831 589 43 995 547 525 162 497 933 562 89 30 118 84 97
          21 855 164 697 519 448 437 9 666 931 424 982 820 992 1006 228 211 197
          239 795 815 130 527 734 578 38 123 886 238 67 964 325 436 522 453 408
          719 684 832 824 388 864 905 493 84 170 92 179 508 258 641 742 290 380
          854 96 67 897 636 2 758 321 246 430 563 628 787 465 710 212 225 65 895
          730 79 49 672 74 171 38 265 383 463 205 469 782 805 187 866 705 403 75
          864 745 652 799 1000 156 883 93 990 839 602 200 430 781 853 627 676 270
          616 437 471 533 122 91 338 749 907 178 413 434 549 990 392 160 457 997
          582 642 97 376 234 8 207 330 865 47 146 959 457 976 334 1013 414 100
          537 55 946 73 692 354 237 997 30 340 452 17 730 767 942 1010 280 1017
          811 365 714 989 925 437 517 239 463 963 607 496 763 353 771 1 607 114
          197 187 616 252 113 152 722 275 652 787 922 978 151 739 634 485 711 598
          705 580 757 340 256 566 67 392 188 52 293 429 266 852 1018 424 43 745
          729 777 946 260 594 857 564 33 339 650 142 798 1020 0 193 849 263 916
          931 1018 846 516 354 583 572 901 792 772 911 268 710 409 376 99 350 505
          101 796 195 304 393 1011 840 1012 491 950 258 344 522 500 697 523 853
          1012 668 506 800 592 1013 64 997 454 573 679 356 457 998 127 860 371
          484 382 633 295 528 909 437 442 307 846 1001 81 47 144 694 185 608 581
          109 542 100 443 668 215 59 271 4 780 7 782 106 31 662 510 659 488 693
          822 628 599 614 761 702 650 393 592 433 461 55 835 982 515 562 288 324
          462 1004 222 238 232 158 492 741 992 473 200 356 632 676 59 924 750 171
          138 863 811 576 398 415 866 734 844 683 224 926 269 41 748 689 795 295
          192 740 882 32 416 768 290 34 748 194 344 831 847 149 998 790 76 300 33
          528 728 873 414 140 373 926 134 825 474 176 405 894 506 283 270 293
          1019 661 800 53 778 632 144 508 437 15 292 609 498 653 619 970 261 496
          951 274 550 1018 687 294 313 791 182 1002 625 851 422 751 533 724 117
          959 199 951 223 18 942 57 955 427 377 190 852 667 924 855 682 611 405
          843 471 80 660 436 40 1009 878 472 38 415 297 761 653 505 623 20 639
          308 122 3 863 931 391 199 500 378 587 41 428 574 740 891 667 982 775 21
          992 722 942 940 18 701 523 21 901 954 518 14 674 777 915 323 302 182
          687 133 863 167 235 289 714 3 838 507 714 131 271 710 331 388 257 955
          925 284 622 542 556 765 1015 523 607 216 824 560 778 958 702 696 118
          928 248 331 826 309 989 870 919 345 827 898 580 845 744 404 43 248 607
          576 169 433 370 663 403 737 551 162 983 166 967 971 432 164 803 439 158
          324 733 185 86 90 1020 763 716 412 74 660 309 245 801 599 246 535 911
          270 168 94 392 18 572 286 9 571 249 38 738 984 357 180 790 387 142 123
          572 725 373 839 917 712 416 990 691 641 778 801 264 328 597 685 511 560
          670 690 146 88 398 416 956 564 628 441 2 578 504 73 475 984 635 793 131
          836 12 386 986 583 110 424 509 986 362 825 728 964 552 644 914 526 507
          378 19 501 510 501 804 904 911 879 708 865 395 927 792 215 717 883 680
          253 110 421 1010 312 49 503 569 963 718 153 348 663 390 917 214 643 758
          211 573 908 125 1019 164 739 429 124 714 32 916 168 641 407 64 886 365
          427 161 514 227 485 365 63 1005 511 490 621 65 524 631 833 967 331 982
          990 739 160 756 430 687 756 14 892 52 526 124 363 700 678 668 517 629
          538 262 858 457 699 751 480 482 81 257 52 421 590 918 589 838 390 485
          575 338 542 391 723 472 611 1019 359 574 46 581 670 794 445 15 20 611
          322 492 837 856 495 3 597 374 679 345 25 394 49 991 665 850 810 615 403
          258 86 705 328 290 945 924 887 844 740 971 1011 644 838 658 690 923 577
          131 863 94 332 657 760 429 553 197 165 873 874 720 397 469 367 702 47
          834 290 422 753 404 988 325 634 896 483 388 473 100 168 744 929 251 666
          773 779 1015 338 623 226 446 207 741 780 208 468 701 680 106 275 287 76
          471 1 439 702 601 984 184 655 832 124 465 59 1012 602 451 303 777 382
          118 48 601 427 581 809 180 338 326 657 634 209 567 815 860 970 917 626
          458 585 406 510 332 793 423 908 171 955 305 581 623 216 764 313 126 178
          404 930 578 844 225 845 995 181 195 682 237 126 654 894 89 649 112 784
          187 416 765 789)
         (395 835 917 608 924 53 230 915 1 958 37 689 919 154 160 804 373 976 539
          871 529 642 152 290 803 735 825 631 72 218 831 690 653 40 849 153 105
          415 682 770 732 276 610 947 234 493 235 1006 622 960 872 954 653 4 131
          185 556 267 190 680 496 771 28 784 746 360 563 418 180 1019 386 747 481
          986 399 173 25 880 526 838 394 967 119 65 118 314 901 148 76 604 864
          202 945 791 167 441 132 791 281 276 486 540 24 348 210 502 191 224 596
          242 129 594 867 744 1021 170 967 375 804 257 806 728 669 261 85 887 502
          825 960 504 520 364 565 326 771 175 451 840 200 256 118 655 568 541 28
          252 424 194 428 999 731 398 233 558 72 582 335 544 526 792 426 644 557
          511 925 181 903 479 662 603 135 355 815 520 822 979 726 453 23 1014 533
          284 900 150 471 467 567 352 139 141 408 855 356 977 424 534 455 691 646
          290 1019 625 243 857 388 507 588 3 216 389 567 234 529 205 320 960 914
          59 893 836 951 506 583 18 787 986 958 463 401 85 401 120 294 948 491
          355 1018 312 113 266 837 443 592 447 977 491 256 157 15 761 346 314 22
          629 629 927 813 170 747 298 638 863 976 579 553 331 684 571 336 20 4
          1015 675 646 580 520 607 715 426 525 121 386 293 463 1003 703 612 78
          340 840 138 70 754 689 155 296 416 861 7 951 921 451 908 802 760 345
          603 549 539 111 457 224 572 62 389 979 496 340 914 367 932 591 188 727
          962 36 253 926 594 709 230 753 315 214 325 615 577 531 803 725 809 469
          880 544 571 796 46 133 540 443 655 707 542 768 729 450 617 943 852 380
          650 1003 750 563 360 692 107 454 432 17 428 163 910 644 619 430 304 172
          373 940 373 109 141 1000 978 821 1021 966 378 615 958 387 109 108 782
          169 236 629 188 901 900 115 94 928 183 911 508 652 324 52 45 616 626
          874 533 700 211 696 18 714 105 798 808 300 521 209 433 791 844 183 805
          239 818 721 685 652 381 32 682 163 956 673 489 943 688 381 816 529 370
          486 974 429 281 698 174 677 724 54 92 168 174 265 457 304 102 735 839
          335 786 703 980 757 923 252 838 797 571 381 617 45 396 120 490 125 781
          287 498 598 598 315 890 110 187 507 16 507 700 1002 564 257 95 690 455
          589 780 731 511 934 474 331 35 396 347 476 328 202 567 533 48 336 587
          140 117 23 724 740 666 981 148 396 738 972 16 490 18 937 543 494 931
          743 526 647 423 263 1000 87 637 165 208 474 678 751 179 910 393 521 493
          273 169 588 971 437 782 111 535 965 187 805 347 713 68 635 1001 888 992
          875 862 284 667 317 382 664 958 32 694 90 569 9 253 784 592 406 969 711
          487 786 753 1015 629 242 37 475 32 70 178 879 512 828 665 871 493 782
          902 52 334 504 886 52 238 709 31 201 467 473 783 341 380 784 244 652
          450 711 166 260 854 404 556 995 513 477 870 966 292 340 803 55 990 50
          99 648 134 73 765 361 479 228 498 238 226 745 410 18 604 706 945 253
          684 795 802 403 368 232 923 751 57 257 291 638 708 134 764 993 744 255
          854 257 330 997 125 806 961 477 52 781 1006 23 527 390 513 25 453 808
          114 912 653 503 507 519 121 778 745 194 679 631 248 705 817 278 587 801
          493 653 1017 413 554 243 435 328 843 1009 599 245 980 109 765 247 356
          826 736 996 865 237 122 36 1015 313 76 719 699 910 984 490 726 680 596
          944 306 195 229 579 600 981 365 622 381 244 211 80 582 682 716 858 963
          277 963 461 178 333 900 241 411 194 834 188 168 399 394 525 624 734 667
          833 841 848 725 987 687 885 960 55 611 227 40 144 164 387 912 1002 949
          295 625 940 512 428 46 786 555 570 402 190 508 491 140 171 514 59 558
          373 10 244 715 981 574 615 890 805 512 891 105 673 592 385 369 465 336
          959 792 209 409 48 158 1015 31 203 841 127 831 537 643 939 905 588 290
          281 448 719 582 222 401 838 187 470 115 919 246 922 648 990 877 148 825
          864 349 641 492 419 412 395 411 938 388 114 1015 542 408 456 457 403
          752 85 462 430 279 103 504 217 52 567 361 605 675 527 130 173 1012 951
          527 33 364 432 496 12 848 4 473 266 631 923 401 655 247 435 423 252 869
          521 576 673 374 752 314 316 419 713 867 193 584 938 124 540 996 381 75
          450 843 771 559 892 763 630 218 54 262 237 533 927 292 847 129 361 221
          725 700 189 51 211 224 789 952 1018 98 464 1002 208 945 661 414 363 96
          546 743 615 657 427 951 917 92 642 663 842 153 101 43 212 717 39 874
          156 889 935 633 556 567 255 109 362 334 32 685 357 851 663 115 226 534
          552 394 421 55 40 746 768 647 718 288 292 710 65 696 166 999 592 33 969
          860 193 142 810 998 82 273 492 81 365 56 811 286 259 971 856 830 319
          775 683 1007 765 510 618 18 1005 426 512 622 682 556 282 695 432 112
          328 509 403 734 283 84 777 710 762 784 502 165 134 265 31 427 294 284
          933 107 1016 295 195 294 29 740 743 849 133 464 509 241 73 963 686 299
          306 543 160 700 849 380 627 265 935 642 833 981 362 356 465 197 632 829
          922 315 109 355 288 630 342 56 959 34 256 665 872 494 380 235 549 440
          34 553 763 800 364 228 977 746 403 548 1011 105 700 713 134 205 266 646
          321 17 508 916 173 663 294 955 677 25 545 558 830 11 295 593 1006 684
          732 433 828 635 888 16 530 339 726 346 841 1005 1014 284 290 243 930
          120 493 34 402 16 171 985 840 151 445 686 231 65 474 661 429 959 909
          813 676 193 758 310 423 256 467 332 255 947 287 301 529 564 429 948 258
          491 468 112 473 407 468 858 926 372 751 104 610 903 592 173 491 137 502
          345 802 393 248 276 468 360 508 140 763 622 105 282 918 1004 104 560
          513 539 962 958 503 45 640 189 225 695 545 569 407 574 780 115 706 120
          705 6 43 951 652 138 141 359 451 132 526 843 108 243 280 112 769 766
          657 296 309 820 985 268 894 295 616 499 958 764 217 721 577 861 395 435
          145 824 510 442 839 950 281 283 258 43 900 941 284 12 908 939 43 3 993
          584 935 813 127 881 781 6 491 308 502 790 176 671 994 443 139 479 240
          561 56 487 586 441 990 942 224 623 648 336 686 233 746 750 878 614 536
          959 786 59 931 538 611 94 982 261 620 269 860 287 125 612 160 537 163
          804 759 662 331 481 954 765 250 964 166 677 224 790 518 320 922 249 409
          116 571 242 834 571 58 846 737 721 869 908 13 514 302 670 602 141 847
          392 854 701 790 955 506 1 813 1004 293 162 863 469 363 619 700 592 984
          845 927 681 427 311 138 715 59 427 579 748 982 75 795 1007 742 221 483
          741 887 104 69 47 942 908 658 490 884 930 408 149 201 808 524 102 499
          162 150 484 803 280 23 514 945 223 389 468 272 847 78 200 985 716 810
          568 680 892 677 757 910 793 812 706 983 357 525 716 1022 247 41 800 524
          662 967 590 949 958 919 194 389 901 848 632 432 127 873 682 854 17 572
          420 206 473 1006 147 1018 2 954 786 473 707 732 872 549 8 313 413 806
          465 561 738 936 243 955 103 852 930 607 629 208 488 759 988 32 826 330
          583 20 524 48 416 609 476 340 605 194 64 975 157 152 938 692 644 222
          758 522 161 605 484 471 665 995 233 104 836 396 1021 812 368 433 961
          537 714 937 949 620 289 105 691 374 286 414 96 656 12 872 596 32 423
          976 196 191 673 108 731 863 651 591 111 301 253 666 720 642 42 846 911
          227 972 306 965 732 798 362 186 558 625 98 428 635 154 245 57 947 276
          21 195 258 296 449 329 900 738 52 317 296 216 1007 258 758 60 683 672
          706 785 1007 593 3 757 871 855 593 739 642 534 951 626 824 354 519 418
          429 516 459 542 205 217 114 400 450 277 744 653 1012 274 149 597 506
          362 799 76 671 111 927 240 409 303 661 111 226 371 263 886 532 262 713
          560 993 166 420 1021 945 385 617 494 62 85 796 250 408 778 842 207 144
          524 308 546 422 858 317 985 855 774 885 415 23 255 206 973 488 200 941
          358 959 287 178 92 606 218 133 516 566 455 528 819 924 735 316 943
          257))))
  (defun regress-1 ()
    ;; Re avl-tree-concatenate not properly balancing trees
    (multiple-value-bind (a b) (regress-pair regress-1)
      (assert (avl-tree-balanced-p (avl-tree-intersection a b #'fixnum-compare))))
    (let* ((a
            (MAKE-AVL-TREE
             (VECTOR 140 142 144 147 149 150 151 152 153 154 155 156 157) 158
             (MAKE-AVL-TREE
              (MAKE-AVL-TREE
               (MAKE-AVL-TREE (VECTOR 160 161 162 164 165 166 167 168) 169
                              (VECTOR 170 171 173 174 176 178 179 180))
               181 (VECTOR 183 185 186 187 188 189 190 191))
              193 (VECTOR 194 195 196 197 200 201 202 203))))
           (b (MAKE-AVL-TREE (VECTOR 205 206 207 208 209 211 212 214 216) 217
                             (MAKE-AVL-TREE (VECTOR 218 221 222 223 224 225 226 227 228)
                                            229
                                            (VECTOR 230 231 232 233 234 235 237 238 239
                                                    240 241 242 243 245 246)))))
      (assert (avl-tree-balanced-p (avl-tree-intersection a b #'fixnum-compare))))
    t))



(defun regress-2 ()
  (multiple-value-bind (a b)
       (regress-pair
        '((121 34 102 82 53 70 35 42 115 98 100 72 95 104 66 47 68 80 124 63 88 90
           84 90 112 48 90 52 30 79 46 27 117 29 7 94 66 19 84 75 50 78 70)
          (61 44 9 62 37 57 63 87 98 9 55 29 74 106 66 89 42 30 9 10 53 12 127 74
           39 14 54 58 27 3 9 70 119 14 30 92 62 35 107 31 59 6 38 115 113 40 98
           120 13 56 107 23 5 11 17 7 47 44 24 1 75 110 59 41 127 14 92 111 78 119
           102 115 96 101 89 57 7 14 47 62 15 24 78 35 87 72 76 7 80 20 89 94 110
           2 31 52 89 39 102 69 8 80 80 50 16 119 7 2 40 31 69 99 102 78 68 17 109
           89 79 36 123 24 85 26 44 91 62 20 37 123 48 75 42 54 125 125 77 120 98
           119 68 54 47 7 36 58 108 4 125 127 93 37 119 68 68 6 91 55 80 45 17 51
           117 110 63 53 65 19 83 22 122 36 106)))
     (avl-tree-intersection a b #'fixnum-compare)))


(defun regress-3 ()
  (join-avl-tree (VECTOR 3 7 10 14 15)
                 19
                 (MAKE-AVL-TREE (VECTOR 23 25 26 27 28 29 30 33 35 36 37 39 40 41 42) 44
                                (VECTOR 48 50 51 59 60))
                        #'fixnum-compare))
(defun regress-4 ()
(let ((minlen  +avl-tree-min-array-length+)
      (maxlen  +avl-tree-max-array-length+))
  (assert (avl-tree-balanced-p
           (join-avl-tree (apply #'vector (loop for i below minlen
                                             collect i))
                          maxlen
                          (make-avl-tree (apply #'vector (loop for i below maxlen
                                                            collect (+ 1 minlen i)))
                                         (* 2 maxlen)
                                         (apply #'vector (loop for i below minlen
                                                            collect (+ 1 (* 2 minlen) i))))
                          #'fixnum-compare)))))

(defun regress-5 ()
  (multiple-value-bind (a b)
       (regress-pair
        '((125 103 40 122 32 32 47 31 61 36 10 30 90 16 40 62 21 41 80 125 96 75
           32 121 31 101 14 41 67 32 112 98 8 24 51 11 89 99 77 37 103 113 24 15
           74 21 75 26 78 125 45 30 66 56 78 56 122 116 71 67 45 90 58 25 63 83 54
           6 96 18 102 3 59 108 95 84 83 39 84 115 110 33 65 72 15 52 41 63 21 25
           55 61 99 59 96 110 93 21 3 40 53 0 55 89 64 95 4 104 77 41 66 117)
          (74 68 97 111 47 87 97 42 42 34 99 74 43 113 22 64 78 85 20 93 2 60 109
           45 66 96 125 91 124 68 55 5 36 53 84 40 127 115 100 43 11 53 92 72 71
           31 58 28 17 105 33 59 96 47 117 10 31 106 84 94 54)))
    (avl-tree-intersection a b #'fixnum-compare)))


(defun regress-6 ()
  (multiple-value-bind (left value right)
      (values
       (%avl-tree :WEIGHT 36
                  :VALUE 337
                  :LEFT #(301 304 309 311 314 317 319 321 325 327 328 329 331 332)
                  :RIGHT
                  (%avl-tree :WEIGHT 21
                             :VALUE 372
                             :LEFT #(340 342 344 351 357 358 359 362 363 364 366 368)
                             :RIGHT #(376 377 378 381 382 383 384 385)))
       387
       (%avl-tree :WEIGHT 203
                  :VALUE 881
                  :LEFT
                  (%avl-tree :WEIGHT 156
                             :VALUE 561
                             :LEFT
                             (%avl-tree :WEIGHT 58
                                        :VALUE 478
                                        :LEFT
                                        (%avl-tree :WEIGHT 31
                                                   :VALUE 428
                                                   :LEFT
                                                   (%avl-tree :WEIGHT 18
                                                              :VALUE 402
                                                              :LEFT #(390 391 393 395 397 399 400 401)
                                                              :RIGHT #(406 407 409 414 418 419 422 423 424))
                                                   :RIGHT #(432 434 443 447 448 450 455 457 465 469 473 475))
                                        :RIGHT
                                        (%avl-tree :WEIGHT 26
                                                   :VALUE 523
                                                   :LEFT #(486 490 491 496 499 500 501 511 513 515 517 519 520 522)
                                                   :RIGHT #(533 534 538 539 543 544 546 550 551 554 556)))
                             :RIGHT
                             (%avl-tree :WEIGHT 97
                                        :VALUE 648
                                        :LEFT
                                        (%avl-tree :WEIGHT 23
                                                   :VALUE 601
                                                   :LEFT #(562 564 567 575 577 581 583 586 595 599)
                                                   :RIGHT #(608 611 616 618 622 629 630 635 637 640 642 646))
                                        :RIGHT
                                        (%avl-tree :WEIGHT 73
                                                   :VALUE 778
                                                   :LEFT
                                                   (%avl-tree :WEIGHT 39
                                                              :VALUE 738
                                                              :LEFT
                                                              (%avl-tree :WEIGHT 27
                                                                         :VALUE 696
                                                                         :LEFT #(652 657 661 663 666 668 670 677 678 682 685 692)
                                                                         :RIGHT #(698 701 702 705 712 714 718 720 721 726 727 730 731
                                                                                  734))
                                                              :RIGHT #(748 754 758 761 764 765 767 769 770 771 773))
                                                   :RIGHT
                                                   (%avl-tree :WEIGHT 33
                                                              :VALUE 831
                                                              :LEFT #(780 782 783 785 787 790 797 804 806 822 823 825 826 827
                                                                      830)
                                                              :RIGHT
                                                              (%avl-tree :WEIGHT 17
                                                                         :VALUE 858
                                                                         :LEFT #(833 842 843 846 848 851 853 856)
                                                                         :RIGHT #(860 865 870 871 872 875 878 880))))))
                  :RIGHT
                  (%avl-tree :WEIGHT 46
                             :VALUE 954
                             :LEFT
                             (%avl-tree :WEIGHT 26
                                        :VALUE 915
                                        :LEFT #(882 886 888 890 894 899 903 905 907 909 910 911)
                                        :RIGHT #(919 922 925 926 927 928 929 933 934 936 948 952 953))
                             :RIGHT
                             (%avl-tree :WEIGHT 19
                                        :VALUE 983
                                        :LEFT #(961 962 964 966 969 970 974 976 981)
                                        :RIGHT #(984 985 990 991 992 995 1009 1021 1023)))))
    (join-avl-tree left value right #'-)))


(defun regress-7()
  (multiple-value-bind (a b)
      (regress-pair
       '((13 34 44 31 92 53 23 103 47 34 3 29 85 111 4 119 45 0 44 112 80 26 92
          77 99 64 108 50 36 1 118 88 79 117 67 33 39 107 71 80 47 2 126 7 85 86
          46 111 20 84 89 16 117 88 117 119 104 8 19 38 9 125 61 46 28 36 24 57
          45 102 0 16 110 14 87 34 63 44 46 45 79 63 96 91 121 21 22 40 46 109
          106 104 40 78 119 50 26 76 118 60 15 92 32 102 76 26 39 104 115 104 82
          120 12 28 119 14 10 17 11 80 44 30 120 126 95 94 92 35 76 19 13 41 88
          68 79 52 17 40 126 126 93 11 1 37 104 57 99 54 42 10 63 50 88 9 35 45
          60 66 74 24 9 20 76 56 91 1 27 62 119 70 118 37 83 4 60 72 123 65 88
          107 121 97 56 7 28 50 89 23 126 39 43 126)
         (14 90 104 81 89 97 44 43 127 27 43 40 44 63 13 21 19 110 78 97 83 73
          119 81 54 5 111 8 110 71 69 80 108 22 30 64 63 80 22 69 97 88 70 115 18
          70 15 123 46 33 88 99 14 116 50 22 61 82 27 100 117 36 110 43 11 68 14
          98 74 77 104 117 119 109 68 27 125 10 33 69 9 34 33 124 37 27 64 54 71
          7 52 5 22 32 38 73 0 97 67 100 55 88 83 79 74 87 10 44 123 14 3 5 27
          114 73 62 4 110 20 18 82 67 106 100 4 89 55 58 51 88 70 2 117 47 108
          111 5 51 64 95 8 112 96 17 87 62 83 54 19 56 105 45 51 12 123 127 94 62
          104 93 95 71 62 114 62 122 18 94 36 13 30 40 75 47 57 101 66 81 3 84 65
          125 96 49)))
    (avl-tree-difference a b #'fixnum-compare))

(defun regress-8()
  (multiple-value-bind (l v r)
      (values #(32 33 34 36)
              37
              (%avl-tree :WEIGHT 22
                         :VALUE 61
                         :LEFT #(38 40 43 44 45 46 47 49 50 51 52 54 55 56 57 58)
                         :RIGHT #(62 63 64 65 66)))

    (join-avl-tree l v r #'fixnum-compare)))

(defun regress-9 ()
  (balance-avl-tree-array-pair  #(38 40 43 44 45 46 47 49 50 51 52 54 55 56 57 58)
                                61
                                #(62 63 64 65 66)))

(defun regress ()
  (regress-1))
